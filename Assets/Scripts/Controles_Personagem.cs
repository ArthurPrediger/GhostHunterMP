//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Controles_Personagem.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @Controles_Personagem: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @Controles_Personagem()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Controles_Personagem"",
    ""maps"": [
        {
            ""name"": ""movimentacao"",
            ""id"": ""03579976-6db0-4a4b-9ee8-f7f7300d3ce7"",
            ""actions"": [
                {
                    ""name"": ""Mover"",
                    ""type"": ""Value"",
                    ""id"": ""d189c1c9-d147-4a7a-832c-c8f66ecd3f31"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""0bfa1ac3-5f6b-473e-8de4-898afb663ebb"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Mover"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""d57f71e0-9973-4699-82bb-fa26ea170fe7"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Mover"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""830330f5-d869-4d56-9dc3-4b9bc9bd93ae"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Mover"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""c51907d0-2f4d-40b6-99e2-074b564189d8"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Mover"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""cda47601-ef8a-4f89-9b08-78bacb105e53"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Mover"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Setas"",
                    ""id"": ""1f1924b3-ce06-493f-b46f-820544e2f81d"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Mover"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""4d1f7c49-ab70-46dd-acca-5c0ce8d667c0"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Mover"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""193cbde7-9bb5-45d6-869d-c9720ef4adbb"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Mover"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""10750743-6f66-42d2-bbd1-a1b3726f76c1"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Mover"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""46752923-09c6-47d2-954d-f0b652c9ed97"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Mover"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // movimentacao
        m_movimentacao = asset.FindActionMap("movimentacao", throwIfNotFound: true);
        m_movimentacao_Mover = m_movimentacao.FindAction("Mover", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // movimentacao
    private readonly InputActionMap m_movimentacao;
    private List<IMovimentacaoActions> m_MovimentacaoActionsCallbackInterfaces = new List<IMovimentacaoActions>();
    private readonly InputAction m_movimentacao_Mover;
    public struct MovimentacaoActions
    {
        private @Controles_Personagem m_Wrapper;
        public MovimentacaoActions(@Controles_Personagem wrapper) { m_Wrapper = wrapper; }
        public InputAction @Mover => m_Wrapper.m_movimentacao_Mover;
        public InputActionMap Get() { return m_Wrapper.m_movimentacao; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MovimentacaoActions set) { return set.Get(); }
        public void AddCallbacks(IMovimentacaoActions instance)
        {
            if (instance == null || m_Wrapper.m_MovimentacaoActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_MovimentacaoActionsCallbackInterfaces.Add(instance);
            @Mover.started += instance.OnMover;
            @Mover.performed += instance.OnMover;
            @Mover.canceled += instance.OnMover;
        }

        private void UnregisterCallbacks(IMovimentacaoActions instance)
        {
            @Mover.started -= instance.OnMover;
            @Mover.performed -= instance.OnMover;
            @Mover.canceled -= instance.OnMover;
        }

        public void RemoveCallbacks(IMovimentacaoActions instance)
        {
            if (m_Wrapper.m_MovimentacaoActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IMovimentacaoActions instance)
        {
            foreach (var item in m_Wrapper.m_MovimentacaoActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_MovimentacaoActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public MovimentacaoActions @movimentacao => new MovimentacaoActions(this);
    public interface IMovimentacaoActions
    {
        void OnMover(InputAction.CallbackContext context);
    }
}
